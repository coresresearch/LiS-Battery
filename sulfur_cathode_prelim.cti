
#----------------------------------------------------------------------
#	Sulfur Cathode for Li-ion battery simulations
#		S. DeCaluwe, Colorado School of Mines
#		01-29-2015
#		Adopted from Hofmann, Fronczek, and Bessler,
#			J. Power Sources, 2014.
#
# Modified by D. Korff, Colorado School of Mines
#		06-12-2019
#----------------------------------------------------------------------
units(length = "cm", time = "s", quantity = "mol", act_energy = "J/mol")

metal(
	name 	 = "sulfur",
	elements = "S",
	species  = "S8(s)",
	density  = (2.07e3, 'kg/m3'),
	initial_state = state(temperature=300.0)
	)

metal(
	name 	 = "lithium_sulfide",
	elements = "Li S",
	species  = "Li2S(s)",
	density  = (1640, 'kg/m3'),
	initial_state = state(temperature=300.0)
	)

metal(
	name	= "carbon",
	elements = "C",
	species  = "C6",
	density	 = (2.26e3, 'kg/m3'),
	initial_state = state(temperature=300.0)
	)

metal(
    name          = "electron",
    elements      = "E",
    species       = "electron",
    density       = (1.0, 'kg/m3'), # dummy entry
    initial_state = state(temperature=300.0, mole_fractions = "electron:1.0")
		)

ideal_interface(
		name = "sulfur_surf",
		species = "(dummy)",
	 	site_density = 3.48e-2,
		reactions = "S-E-*",
		phases = " sulfur electrolyte electron ",
		initial_state = state(temperature=300.0)
		)

ideal_interface(
		name = "carbon_surf",
		species = "(dummy)",
	 	site_density = 3.48e-2,
		reactions = "C-E-*",
		phases = " carbon electrolyte electron ",
		initial_state = state(temperature=300.0)
		)

ideal_interface(
		name = "lithium_sulfide_surf",
		species = "(dummy)",
		site_density = 3.48e-2,
		reactions = "L-E-*",
		phases = " lithium_sulfide electrolyte electron ",
		initial_state = state(temperature=300.0)
		)

edge(
	name = "tpb",
	elements = " C Li S ",
	species = "(tpb)",
	site_density = 3.48e-2,
	reactions = "edge-*",
	phases = ' carbon lithium_sulfide carbon_surf lithium_sulfide_surf ',
	initial_state = state(temperature=300.0, coverages = '(tpb):1.0')
	)

#------------------------------------------------------------------------------
# Carbonate based electrolyte
# Solvent: Ethylene carbonate:Propylene carbonate (1:1 v/v)
# Salt: 1M LiPF6
#------------------------------------------------------------------------------

IdealSolidSolution(
    name                   = "electrolyte",
    elements               = "Li P F C H O E S",
    species                = "C3H4O3(e) C4H6O3(e) Li+(e) PF6-(e) S8(e) S8-(e) S6-(e) S4-(e) S2-(e) S-(e)",
    initial_state          = state(temperature=300.0,
														 mole_fractions = '''C3H4O3(e):0.47901 C4H6O3(e):0.37563 Li+(e):0.07268 PF6-(e):0.07268
														 S8(e):0.0 S8-(e):0.0 S6-(e):0.0 S4-(e):0.0 S2-(e):0.0 S-(e):0.0'''),
    standard_concentration = "unity"
		)

"""
IdealSolidSolution(
    name                   = "electrolyte",
    elements               = "Li P F C H O E S",
    species                = "C3H4O3(e) C4H6O3(e) Li+(e) PF6-(e) S8(e) S8-(e) S4-(e) S-(e)",
    initial_state          = state(temperature=300.0,
														 mole_fractions = '''C3H4O3(e):0.47901 C4H6O3(e):0.37563 Li+(e):0.07268 PF6-(e):0.07268
							S8(e):0.0 S8-(e):0.0 S4-(e):0.0 S-(e):0.0'''),
    standard_concentration = "unity"
		)
"""

#-----------------------------------------------------------------------------
#  Species data
#-----------------------------------------------------------------------------
species(
	name = "C6",
	atoms = "C:6",
	thermo = const_cp(h0 = (0.0, 'kJ/mol'), s0 = (0.0, 'J/mol/K')),
	standardState = constantIncompressible(molarVolume = (72.0660/2.270, 'cm3/mol'))
	)

species(
	name = "electron",
	atoms = "E:1",
	thermo = const_cp(h0 = (0.0, 'kcal/mol'))
	)

species(
	name = "Li2S(s)",
	atoms = "Li:2 S:1",
	thermo = const_cp(h0 = (0+200, 'kJ/mol'), s0 = (0.0, 'J/mol/K'))
	)

#species(
#	name = "Li2S2(s)",
#	atoms = "Li:2 S:2 E:2",
#	thermo = const_cp(h0 = (-550.0, 'kJ/mol'), s0 = (0.0, 'J/mol/K'))
#	)

#------------------------------------------------------------------------------
# Lithium ion, MW: 6.940455 g/mol
# Density of electrolyte: 1260.0 kg/m3 (used to calculate species molar volume
# as molecular weight (MW)/density)
# Molar enthalpy and entropy taken from Li+(aq) from P. Atkins "Physical
# Chemistry", Wiley-VCH (2006)
#------------------------------------------------------------------------------
species(
	name 		= "Li+(e)",
	atoms 		= " Li:1 E:-1 ",
	thermo 		= const_cp(h0 = (-278.49, 'kJ/mol'), s0 = (13.4, 'J/mol/K')),
	standardState	= constantIncompressible(molarVolume = (6.940455/1.260, 'cm3/mol'))
	)

#------------------------------------------------------------------------------
# Hexafluorophosphate ion, MW: 144.964745 g/mol
# Density of electrolyte: 1260.0 kg/m3 (used to calculate species molar volume
# as molecular weight (MW)/density)
# Molar enthalpy and entropy set to zero (dummy entries as this species does
# not participate in chemical reactions)
#------------------------------------------------------------------------------
species(
    name          = "PF6-(e)",
    atoms         = "P:1 F:6 E:1",
    thermo        = const_cp(h0 = (0.0, 'J/mol'), s0 = (0.0, 'J/mol/K')),
    standardState = constantIncompressible(molarVolume = (144.964745/1.260, 'cm3/mol'))
	)

#------------------------------------------------------------------------------
# Ethylene carbonate, MW: 88.0630 g/mol
# Density of electrolyte: 1260 kg/m3 (used to calculate species molar volume
# as molecular weight (MW)/density)
# Molar enthalpy and entropy set to zero (dummy entries as this species does
# not participate in chemical reactions)
#------------------------------------------------------------------------------
species(
    name          = "C3H4O3(e)",
    atoms         = "C:3 H:4 O:3",
    thermo        = const_cp(h0 =(0.0, 'J/mol'), s0 = (0.0, 'J/mol/K')),
    standardState = constantIncompressible(molarVolume = (88.0630/1.260, 'cm3/mol'))
		)

#------------------------------------------------------------------------------
# Propylene carbonate, MW: 102.0898 g/mol
# Density of electrolyte: 1260.0 kg/m3 (used to calculate species molar volume
# as molecular weight (MW)/density)
# Molar enthalpy and entropy set to zero (dummy entries as this species does
# not participate in chemical reactions)
#------------------------------------------------------------------------------
species(
    name          = "C4H6O3(e)",
    atoms         = "C:4 H:6 O:3",
    thermo        = const_cp(h0 =(0.0, 'J/mol'), s0 = (0.0, 'J/mol/K')),
    standardState = constantIncompressible(molarVolume = (102.0898/1.260, 'cm3/mol'))
		)

#------------------------------------------------------------------------------
# Sulfur species
#------------------------------------------------------------------------------
species(
	name = "S8(s)",
	atoms = "S:8",
	thermo = const_cp(h0 = (0.0, 'kJ/mol'), s0 = (0.0, 'J/mol/K')),
	standardState = constantIncompressible(molarVolume = (1/8.07e3, 'm3/mol'))
	)

species(
	name = "S8(e)",
	atoms = "S:8",
	thermo = const_cp(h0 = (17.6, 'kJ/mol'), s0 = (0.0, 'J/mol/K')),
	standardState = constantIncompressible(molarVolume = (1/8.07e3, 'm3/mol'))
	)

species(
	name = "S8-(e)",
	atoms = "S:8 E:2",
	thermo = const_cp(h0 = (-125.0, 'kJ/mol'), s0 = (0.0, 'J/mol/K')),
	standardState = constantIncompressible(molarVolume = (1/8.07e3, 'm3/mol'))
	)

species(
	name = "S6-(e)",
	atoms = " S:6 E:2 ",
	thermo = const_cp(h0 = (-143.0, 'kJ/mol'), s0 = (0.0, 'J/mol/K')),
	standardState = constantIncompressible(molarVolume = (1/10.76e3, 'm3/mol'))
	)

species(
	name = "S4-(e)",
	atoms = " S:4 E:2 ",
	thermo = const_cp(h0 = (-225.0, 'kJ/mol'), s0 = (0.0, 'J/mol/K')),
	standardState = constantIncompressible(molarVolume = (1/16.14e3, 'm3/mol'))
	)

species(
	name = "S2-(e)",
	atoms = "S:2 E:2",
	thermo = const_cp(h0 = (-162.0, 'kJ/mol'), s0 = (0.0, 'J/mol/K')),
	standardState = constantIncompressible(molarVolume = (1/32.3e3, 'm3/mol'))
	)

species(
	name = "S-(e)",
	atoms = " S:1 E:2 ",
	thermo = const_cp(h0 = (-132.0, 'kJ/mol'), s0 = (0.0, 'J/mol/K')),
	standardState = constantIncompressible(molarVolume = (1/64.6e3, 'm3/mol'))
	)

# dummy species for anode/electrolyte interface
#
species(name = "(dummy)", atoms = "")

#-------------------------------------------------------------------------------
#  Reaction data  --------------------------------------------------------------
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# Sulfur-electrolyte reactions
#-------------------------------------------------------------------------------
surface_reaction("S8(s) <=> S8(e)", [1.900e-3, 0.0, 0.0], id="S-E-1")

#-------------------------------------------------------------------------------
# Carbon Electrolyte reactions
#-------------------------------------------------------------------------------

surface_reaction("S8(e) + 2 electron <=> S8-(e)", [1e3, 0.0, 0.0], id="C-E-1", beta=0.5)

surface_reaction("3 S8-(e) + 2 electron <=> 4 S6-(e)", [1e13, 0.0, 0.0], id="C-E-2", beta=0.5)

surface_reaction("2 S6-(e) + 2 electron <=> 3 S4-(e)", [1e10, 0.0, 0.0], id="C-E-3", beta=0.5)

surface_reaction("S4-(e) + 2 electron <=> 2 S2-(e)", [1e-1, 0.0, 0.0], id="C-E-4", beta=0.5)

surface_reaction("S2-(e) + 2 electron <=> 2 S-(e)", [1e1, 0.0, 0.0], id="C-E-5", beta=0.5)

#-------------------------------------------------------------------------------
# Li2S Electrolyte reactions
#-------------------------------------------------------------------------------
#surface_reaction("2 Li+(e) + S-(e) <=> Li2S(s)", [1e-5, 0.0, 0.0], id="L-E-1", beta=0.5)

#-------------------------------------------------------------------------------
# Precipitation reactions
#-------------------------------------------------------------------------------


#-------------------------------------------------------------------------------
# Old reactions
#-------------------------------------------------------------------------------

#surface_reaction("S8-(e) + 2 electron <=> 2 S4-(e)", [1e-40, 0.0, 0.0], id="C-E-2", beta=0.5)

#surface_reaction("S4-(e) + 6 electron <=> 4 S-(e)", [1e-10, 0.0, 0.0], id="C-E-3", beta=0.5)

#edge_reaction("S8(e) + 4 electron <=> 2 S4-(e)", [1e-21, 0.0, 0.0], id="C-E-1",beta=0.5)
#edge_reaction("S4-(e) + 6 electron <=> 4 S-(e)", [1e-40, 0.0, 0.0], id="int-3", beta=0.5)


#edge_reaction("2 S(e) + 2 Li(e) <=> Li2S2(s)", [2.0e1, 0.0, 0.0], id="int-4")
#edge_reaction("2 Li(e) + Li2S2(s) <=> 2 Li2S(s) ", [1e-50, 0.0, 0.0], id="int-7", beta=0.5)
#edge_reaction("3 S8(e) + 8 electron <=> 4 S6(e)", [5e-15, 0.0, 0.0], id="int-5", beta=0.5)
#edge_reaction("2 S6(e) + 2 electron <=> 3 S4(e)", [5e-15, 0.0, 0.0], id="int-6", beta=0.5)
#surface_reaction("S8(e) <=> 8 S(s)", [1.25e-6, 0.0, 0.0], id="int-1")
#edge_reaction("S8(e) + 4 electron <=> 2 S4(e)", [1e-21, 0.0, 0.0], id="int-2",beta=0.5)
#edge_reaction("S4(e) + 6 electron <=> 4 S(e)", [1e-40, 0.0, 0.0], id="int-3", beta=0.5)
#surface_reaction("S(e) + 2 Li(e) <=> Li2S(s)", [2.0e-3, 0.0, 0.0], id="int-4")
#surface_reaction("LiC6 <=> Li(e) + C6", [1.74e-5, 0.0, 0.0], id="int-1")
